<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Yens Loff | CyberSecurity Analyst</title>
    <link>https://yensloff.com/posts/</link>
    <description>Recent content in Posts on Yens Loff | CyberSecurity Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 11 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://yensloff.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arch Installation Guide</title>
      <link>https://yensloff.com/posts/arch-install/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://yensloff.com/posts/arch-install/</guid>
      <description>&lt;h1 id=&#34;a-personal-arch-installation-guide&#34;&gt;A Personal Arch Installation Guide&lt;/h1&gt;
&lt;p&gt;This is a personal guide so if you are lost and just found this guide from somewhere, I recommend you to read the official &lt;a href=&#34;https://wiki.archlinux.org/index.php/Installation_guide&#34;&gt;&lt;code&gt;wiki&lt;/code&gt;&lt;/a&gt;!  This guide will focus on &lt;code&gt;systemd-boot&lt;/code&gt;, &lt;code&gt;UEFI&lt;/code&gt; and a guide if you want to encrypt your partition with &lt;code&gt;LUKS/LVM&lt;/code&gt;. This guide exists so that I can remember a bunch of things when reinstalling &lt;code&gt;Archlinux&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pre-installation&#34;&gt;Pre-installation&lt;/h2&gt;
&lt;p&gt;Before installing, make sure to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://wiki.archlinux.org/index.php/installation_guide&#34;&gt;official wiki&lt;/a&gt;. It is advisable to read that instead. I wrote this guide for myself.&lt;/li&gt;
&lt;li&gt;Acquire an installation image from &lt;a href=&#34;https://www.archlinux.org/download/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Verify signature.&lt;/li&gt;
&lt;li&gt;Prepare an installation medium.&lt;/li&gt;
&lt;li&gt;Boot the live environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;set-the-keyboard-layout&#34;&gt;Set the keyboard layout&lt;/h2&gt;
&lt;p&gt;The default console keymap is US. Available layouts can be listed with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# ls /usr/share/kbd/keymaps/**/*.map.gz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To modify the layout, append a corresponding file name to loadkeys, omitting path and file extension. For example, to set a US keyboard layout:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# loadkeys us
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;verify-the-boot-mode&#34;&gt;Verify the boot mode&lt;/h2&gt;
&lt;p&gt;If UEFI mode is enabled on an UEFI motherboard, Archiso will boot Arch Linux accordingly via systemd-boot. To verify this, list the efivars directory:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# ls /sys/firmware/efi/efivars
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If the command shows the directory without error, then the system is booted in UEFI mode. If the directory does not exist, the system may be booted in &lt;strong&gt;BIOS&lt;/strong&gt; (or &lt;strong&gt;CSM&lt;/strong&gt;) mode.&lt;/p&gt;
&lt;h2 id=&#34;connect-to-the-internet&#34;&gt;Connect to the internet&lt;/h2&gt;
&lt;p&gt;We need to make sure that we are connected to the internet to be able to install Arch Linux &lt;code&gt;base&lt;/code&gt; and &lt;code&gt;linux&lt;/code&gt; packages. Let’s see the names of our interfaces.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# ip link
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see something like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
		link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: enp0s0: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu 1500 qdisc fq_codel state DOWN mode DEFAULT group default qlen 1000
		link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff
3: wlan0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq state UP mode DORMANT group default qlen 1000
		link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff permaddr 00:00:00:00:00:00
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;enp0s0&lt;/code&gt; is the wired interface&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wlan0&lt;/code&gt; is the wireless interface&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;wired-connection&#34;&gt;Wired Connection&lt;/h3&gt;
&lt;p&gt;If you are on a wired connection, you can enable your wired interface by systemctl start &lt;code&gt;dhcpcd@&amp;lt;interface&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# systemctl start dhcpcd@enp0s0
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;wireless-connection&#34;&gt;Wireless Connection&lt;/h3&gt;
&lt;p&gt;If you are on a laptop, you can connect to a wireless access point using &lt;code&gt;iwctl&lt;/code&gt; command from &lt;code&gt;iwd&lt;/code&gt;. Note that it&amp;rsquo;s already enabled by default. Also make sure the wireless card is not blocked with &lt;code&gt;rfkill&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Scan for network.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# iwctl station wlan0 scan
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Get the list of scanned networks by:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# iwctl station wlan0 get-networks
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Connect to your network.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# iwctl -P &amp;quot;PASSPHRASE&amp;quot; station wlan0 connect &amp;quot;NETWORKNAME&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ping archlinux website to make sure we are online:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# ping archlinux.org
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you receive Unknown host or Destination host unreachable response, means you are not online yet. Review your network configuration and redo the steps above.&lt;/p&gt;
&lt;h2 id=&#34;update-the-system-clock&#34;&gt;Update the system clock&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;timedatectl&lt;/code&gt; to ensure the system clock is accurate:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# timedatectl set-ntp true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To check the service status, use &lt;code&gt;timedatectl status&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;partition-the-disks&#34;&gt;Partition the disks&lt;/h2&gt;
&lt;p&gt;When recognized by the live system, disks are assigned to a block device such as &lt;code&gt;/dev/sda&lt;/code&gt;, &lt;code&gt;/dev/nvme0n1&lt;/code&gt; or &lt;code&gt;/dev/mmcblk0&lt;/code&gt;. To identify these devices, use lsblk or fdisk.  The most common main drive is &lt;strong&gt;sda&lt;/strong&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# lsblk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Results ending in &lt;code&gt;rom&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt; or &lt;code&gt;airoot&lt;/code&gt; may be ignored.&lt;/p&gt;
&lt;p&gt;In this guide, I&amp;rsquo;ll create a two different ways to partition a drive. One for a normal installation, the other one is setting up with an encryption(LUKS/LVM). Let&amp;rsquo;s start with the unecrypted one:&lt;/p&gt;
&lt;h3 id=&#34;unencrypted-filesystem&#34;&gt;Unencrypted filesystem&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Let’s clean up our main drive to create new partitions for our installation. And yeah, in this guide, we will use &lt;code&gt;/dev/sda&lt;/code&gt; as our disk.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# gdisk /dev/sda
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Press &lt;kbd&gt;x&lt;/kbd&gt; to enter &lt;strong&gt;expert mode&lt;/strong&gt;. Then press &lt;kbd&gt;z&lt;/kbd&gt; to &lt;em&gt;zap&lt;/em&gt; our drive. Then hit &lt;kbd&gt;y&lt;/kbd&gt; when prompted about wiping out GPT and blanking out MBR. Note that this will &lt;em&gt;&lt;strong&gt;zap&lt;/strong&gt;&lt;/em&gt; your entire drive so your data will be gone - reduced to atoms after doing this. THIS. CANNOT. BE. UNDONE.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;code&gt;cgdisk&lt;/code&gt; to start partitioning our filesystem&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cgdisk /dev/sda
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Press &lt;kbd&gt;Return&lt;/kbd&gt; when warned about damaged GPT.&lt;/p&gt;
&lt;p&gt;Now we should be presented with our main drive showing the partition number, partition size, partition type, and partition name. If you see list of partitions, delete all those first.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the &lt;code&gt;boot&lt;/code&gt; partition&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hit New from the options at the bottom.&lt;/li&gt;
&lt;li&gt;Just hit enter to select the default option for the first sector.&lt;/li&gt;
&lt;li&gt;Now the partion size - Arch wiki recommends 200-300 MB for the boot + size. Let’s make 1GiB in case we need to add more OS to our machine. I’m gonna assign mine with 1024MiB. Hit enter.&lt;/li&gt;
&lt;li&gt;Set GUID to &lt;code&gt;EF00&lt;/code&gt;. Hit enter.&lt;/li&gt;
&lt;li&gt;Set name to &lt;code&gt;boot&lt;/code&gt;. Hit enter.&lt;/li&gt;
&lt;li&gt;Now you should see the new partition in the partitions list with a partition type of EFI System and a partition name of boot. You will also notice there is 1007KB above the created partition. That is the MBR. Don’t worry about that and just leave it there.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the &lt;code&gt;swap&lt;/code&gt; partition&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hit New again from the options at the bottom of partition list.&lt;/li&gt;
&lt;li&gt;Just hit enter to select the default option for the first sector.&lt;/li&gt;
&lt;li&gt;For the swap partition size, I always assign mine with 1GiB. Hit enter.&lt;/li&gt;
&lt;li&gt;Set GUID to &lt;code&gt;8200&lt;/code&gt;. Hit enter.&lt;/li&gt;
&lt;li&gt;Set name to &lt;code&gt;swap&lt;/code&gt;. Hit enter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the &lt;code&gt;root&lt;/code&gt; partition&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hit New again.&lt;/li&gt;
&lt;li&gt;Hit enter to select the default option for the first sector.&lt;/li&gt;
&lt;li&gt;Hit enter again to input your root size.&lt;/li&gt;
&lt;li&gt;Also hit enter for the GUID to select default(&lt;code&gt;8300&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Then set name of the partition to &lt;code&gt;root&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the &lt;code&gt;root&lt;/code&gt; partition&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hit New again.&lt;/li&gt;
&lt;li&gt;Hit enter to select the default option for the first sector.&lt;/li&gt;
&lt;li&gt;Hit enter again to use the remainder of the disk.&lt;/li&gt;
&lt;li&gt;Also hit enter for the GUID to select default.&lt;/li&gt;
&lt;li&gt;Then set name of the partition to &lt;code&gt;home&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lastly, hit &lt;code&gt;Write&lt;/code&gt; at the bottom of the patitions list to &lt;em&gt;write the changes&lt;/em&gt; to the disk. Type &lt;code&gt;yes&lt;/code&gt; to &lt;em&gt;confirm&lt;/em&gt; the write command. Now we are done partitioning the disk. Hit &lt;code&gt;Quit&lt;/code&gt; &lt;em&gt;to exit cgdisk&lt;/em&gt;. Go to the &lt;a href=&#34;#formatting-partitions&#34;&gt;next section&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;encrypted-filesystem-with-lukslvm&#34;&gt;Encrypted filesystem with &lt;code&gt;LUKS/LVM&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Let’s clean up our main drive to create new partitions for our installation. And yeah, in this guide, we will use &lt;code&gt;/dev/sda&lt;/code&gt; as our disk.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# gdisk /dev/sda
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Press &lt;kbd&gt;x&lt;/kbd&gt; to enter &lt;strong&gt;expert mode&lt;/strong&gt;. Then press &lt;kbd&gt;z&lt;/kbd&gt; to &lt;em&gt;zap&lt;/em&gt; our drive. Then hit &lt;kbd&gt;y&lt;/kbd&gt; when prompted about wiping out GPT and blanking out MBR. Note that this will &lt;em&gt;&lt;strong&gt;zap&lt;/strong&gt;&lt;/em&gt; your entire drive so your data will be gone - reduced to atoms after doing this. THIS. CANNOT. BE. UNDONE.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create our partitions by running &lt;code&gt;cgdisk /dev/sda&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cgdisk /dev/sda
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Just press &lt;kbd&gt;Return&lt;/kbd&gt; when warned about damaged GPT.&lt;/p&gt;
&lt;p&gt;Now we should be presented with our main drive showing the partition number, partition size, partition type, and partition name. If you see list of partitions, delete all those first.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the &lt;code&gt;LVM&lt;/code&gt; partition&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hit New again.&lt;/li&gt;
&lt;li&gt;Hit enter to select the default option for the first sector.&lt;/li&gt;
&lt;li&gt;Hit enter again to use the remainder of the disk.&lt;/li&gt;
&lt;li&gt;Set GUID to &lt;code&gt;8e00&lt;/code&gt;. Hit enter.&lt;/li&gt;
&lt;li&gt;Set name to &lt;code&gt;lvm&lt;/code&gt;. Hit enter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lastly, hit &lt;code&gt;Write&lt;/code&gt; at the bottom of the patitions list to &lt;em&gt;write the changes&lt;/em&gt; to the disk. Type &lt;code&gt;yes&lt;/code&gt; to &lt;em&gt;confirm&lt;/em&gt; the write command. Now we are done partitioning the disk. Hit &lt;code&gt;Quit&lt;/code&gt; &lt;em&gt;to exit cgdisk&lt;/em&gt;. Go to the &lt;a href=&#34;#formatting-partitions&#34;&gt;next section&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;verifying-the-partitions&#34;&gt;Verifying the partitions&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;lsblk&lt;/code&gt; again to check the partitions we created. &lt;em&gt;We? I thought I&amp;rsquo;m doing this guide for myself lol&lt;/em&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# lsblk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see &lt;em&gt;something like this&lt;/em&gt;:&lt;/p&gt;
&lt;h3 id=&#34;unencrypted-filesystem-1&#34;&gt;Unencrypted filesystem&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;NAME&lt;/th&gt;
&lt;th&gt;MAJ:MIN&lt;/th&gt;
&lt;th&gt;RM&lt;/th&gt;
&lt;th&gt;SIZE&lt;/th&gt;
&lt;th&gt;RO&lt;/th&gt;
&lt;th&gt;TYPE&lt;/th&gt;
&lt;th&gt;MOUNTPOINT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sda&lt;/td&gt;
&lt;td&gt;8:0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;477G&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sda1&lt;/td&gt;
&lt;td&gt;8:1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;part&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sda2&lt;/td&gt;
&lt;td&gt;8:2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;part&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sda3&lt;/td&gt;
&lt;td&gt;8:3&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;175G&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;part&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sda4&lt;/td&gt;
&lt;td&gt;8:4&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;300G&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;part&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sda&lt;/code&gt;&lt;/strong&gt; is the main disk&lt;br&gt;
&lt;strong&gt;&lt;code&gt;sda1&lt;/code&gt;&lt;/strong&gt; is the boot partition&lt;br&gt;
&lt;strong&gt;&lt;code&gt;sda2&lt;/code&gt;&lt;/strong&gt; is the swap partition&lt;br&gt;
&lt;strong&gt;&lt;code&gt;sda3&lt;/code&gt;&lt;/strong&gt; is the home partition&lt;br&gt;
&lt;strong&gt;&lt;code&gt;sda4&lt;/code&gt;&lt;/strong&gt; is the root partition&lt;/p&gt;
&lt;h3 id=&#34;encrypted-filesystem&#34;&gt;Encrypted filesystem&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;NAME&lt;/th&gt;
&lt;th&gt;MAJ:MIN&lt;/th&gt;
&lt;th&gt;RM&lt;/th&gt;
&lt;th&gt;SIZE&lt;/th&gt;
&lt;th&gt;RO&lt;/th&gt;
&lt;th&gt;TYPE&lt;/th&gt;
&lt;th&gt;MOUNTPOINT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sda&lt;/td&gt;
&lt;td&gt;8:0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;477G&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;disk&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sda1&lt;/td&gt;
&lt;td&gt;8:1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;part&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sda2&lt;/td&gt;
&lt;td&gt;8:2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;part&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sda&lt;/code&gt;&lt;/strong&gt; is the main disk&lt;br&gt;
&lt;strong&gt;&lt;code&gt;sda1&lt;/code&gt;&lt;/strong&gt; is the boot partition&lt;br&gt;
&lt;strong&gt;&lt;code&gt;sda2&lt;/code&gt;&lt;/strong&gt; is the LVM partition&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Surprise! Surprise!&lt;/strong&gt; We will &lt;strong&gt;not&lt;/strong&gt; encrypt the &lt;code&gt;/boot&lt;/code&gt; partition.&lt;/p&gt;
&lt;h2 id=&#34;format-the-partitions&#34;&gt;Format the partitions&lt;/h2&gt;
&lt;h3 id=&#34;unencrypted-filesystem-2&#34;&gt;Unencrypted filesystem&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Format &lt;code&gt;/dev/sda1&lt;/code&gt; partition as &lt;code&gt;FAT32&lt;/code&gt;. This will be our &lt;code&gt;/boot&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkfs.fat -F32 /dev/sda1
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create and enable our &lt;code&gt;swap&lt;/code&gt; under the &lt;code&gt;/dev/sda2&lt;/code&gt; partition.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkswap /dev/sda2
# swapon /dev/sda2
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Format &lt;code&gt;/dev/sda3&lt;/code&gt; and &lt;code&gt;/dev/sda4&lt;/code&gt; partition as &lt;code&gt;EXT4&lt;/code&gt;. This will be our &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;home&lt;/code&gt;  partition.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkfs.ext4 /dev/sda3
# mkfs.ext4 /dev/sda4
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;encrypted-filesystem-1&#34;&gt;Encrypted filesystem&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Format &lt;code&gt;/dev/sda1&lt;/code&gt; partition as &lt;code&gt;FAT32&lt;/code&gt;. This will be our &lt;code&gt;/boot&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkfs.fat -F32 /dev/sda1
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the LUKS encrypted container.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cryptsetup luksFormat /dev/sda2
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter your passphrase twice. Don&amp;rsquo;t forget this!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the created container and name it whatever you want. In this guide I&amp;rsquo;ll just use &lt;code&gt;cryptlvm&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cryptsetup open --type luks /dev/sda2 cryptlvm
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter your passphrase and verify it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The decrypted container is now available at &lt;code&gt;/dev/mapper/cryptlvm&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a physical volume on top of the opened LUKS container:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# pvcreate /dev/mapper/cryptlvm
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the volume group and name it &lt;code&gt;volume&lt;/code&gt; (or whatever you want), adding the previously created physical volume to it:&lt;/p&gt;
&lt;p&gt;In this guide, I&amp;rsquo;ll just use &lt;code&gt;volume&lt;/code&gt; as the volume group name.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# vgcreate volume /dev/mapper/cryptlvm
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create all your needed logical volumes on the volume group. We will create a &lt;code&gt;swap&lt;/code&gt;, &lt;code&gt;root&lt;/code&gt;, and &lt;code&gt;home&lt;/code&gt; logical volumes. Note that the &lt;code&gt;volume&lt;/code&gt; is the name of the volume we just created.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create our &lt;code&gt;swap&lt;/code&gt;. I&amp;rsquo;ll assign 1GB to it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# lvcreate -L 1G volume -n swap
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
is will create `/dev/mapper/volume-swap`.

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create our &lt;code&gt;root&lt;/code&gt;. In this guide, I&amp;rsquo;ll use 100GB.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# lvcreate -L 100G volume -n root
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
is will create `/dev/mapper/volume-root`.

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create our home sweet &lt;code&gt;home&lt;/code&gt;. I&amp;rsquo;ll just assign the remaining space to it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# lvcreate -l 100%FREE volume -n home
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This will create &lt;code&gt;/dev/mapper/volume-home&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Format the logical partitions under the LVM volume.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Format and create our &lt;code&gt;swap&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkswap /dev/mapper/volume-swap  
# swapon /dev/mapper/volume-swap
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Format our &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;home&lt;/code&gt; partitions.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkfs.ext4 /dev/mapper/volume-root
# mkfs.ext4 /dev/mapper/volume-home
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mount-the-filesystems&#34;&gt;Mount the filesystems&lt;/h2&gt;
&lt;h3 id=&#34;unencryped-partition&#34;&gt;Unencryped partition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Mount the &lt;code&gt;/dev/sda&lt;/code&gt; partition to &lt;code&gt;/mnt&lt;/code&gt;. This is our &lt;code&gt;/&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mount /dev/sda3 /mnt
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;code&gt;/boot&lt;/code&gt; mountpoint:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkdir /mnt/boot  
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mount &lt;code&gt;/dev/sda1&lt;/code&gt; to &lt;code&gt;/mnt/boot&lt;/code&gt; partition. This is will be our &lt;code&gt;/boot&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mount /dev/sda1 /mnt/boot
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;code&gt;/home&lt;/code&gt; mountpoint:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkdir /mnt/home  
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mount &lt;code&gt;/dev/sda4&lt;/code&gt; to &lt;code&gt;/mnt/home&lt;/code&gt; partition. This is will be our &lt;code&gt;/home&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mount /dev/sda1 /mnt/home
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
 don’t need to mount `swap` since it is already enabled.  

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;encrypted-partition&#34;&gt;Encrypted partition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Mount the &lt;code&gt;/dev/mapper/volume-root&lt;/code&gt; partition to &lt;code&gt;/mnt&lt;/code&gt;. This is our &lt;code&gt;/&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mount /dev/mapper/volume-root /mnt
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;code&gt;/boot&lt;/code&gt; mountpoint:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkdir /mnt/boot  
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mount &lt;code&gt;/dev/sda1&lt;/code&gt; to &lt;code&gt;/mnt/boot&lt;/code&gt; partition. This is will be our &lt;code&gt;/boot&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mount /dev/sda1 /mnt/boot
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;code&gt;/home&lt;/code&gt; mountpoint:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkdir /mnt/home  
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mount &lt;code&gt;/dev/mapper/volume-home&lt;/code&gt; to &lt;code&gt;/mnt/home&lt;/code&gt; partition. This is will be our &lt;code&gt;/home&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mount /dev/mapper/volume-home /mnt/home
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
 don’t need to mount `swap` since it is already enabled.

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Now let’s go ahead and install &lt;code&gt;base&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;linux-firmware&lt;/code&gt;, and &lt;code&gt;base-devel&lt;/code&gt; packages into our system.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# pacstrap /mnt base base-devel linux linux-firmware
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;base&lt;/code&gt; package does not include all tools from the live installation, so installing other packages may be necessary for a fully functional base system. In particular, consider installing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;userspace utilities for the management of file systems that will be used on the system,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ntfs-3g&lt;/code&gt;: NTFS filesystem driver and utilities&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unrar&lt;/code&gt;: The RAR uncompression program&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unzip&lt;/code&gt;: For extracting and viewing files in &lt;code&gt;.zip&lt;/code&gt; archives&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p7zip&lt;/code&gt;: Command-line file archiver with high compression ratio&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unarchiver&lt;/code&gt;: &lt;code&gt;unar&lt;/code&gt; and &lt;code&gt;lsar&lt;/code&gt;: Objective-C tools for uncompressing archive files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gvfs-mtp&lt;/code&gt;: Virtual filesystem implementation for &lt;code&gt;GIO&lt;/code&gt; (&lt;code&gt;MTP&lt;/code&gt; backend; Android, media player)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libmtp&lt;/code&gt;: Library implementation of the Media Transfer Protocol&lt;/li&gt;
&lt;li&gt;&lt;code&gt;android-udev&lt;/code&gt;: Udev rules to connect Android devices to your linux box&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mtpfs&lt;/code&gt;: A FUSE filesystem that supports reading and writing from any MTP devic&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xdg-user-dirs&lt;/code&gt;: Manage user directories like &lt;code&gt;~/Desktop&lt;/code&gt; and &lt;code&gt;~/Music&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;utilities for accessing &lt;code&gt;RAID&lt;/code&gt; or &lt;code&gt;LVM&lt;/code&gt; partitions,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lvm2&lt;/code&gt;: Logical Volume Manager 2 utilities (&lt;em&gt;if you are setting up an encrypted filesystem with LUKS/LVM, include this on pacstrap&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;specific firmware for other devices not included in &lt;code&gt;linux-firmware&lt;/code&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;software necessary for networking,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dhcpcd&lt;/code&gt;: RFC2131 compliant DHCP client daemon&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iwd&lt;/code&gt;: Internet Wireless Daemon&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inetutils&lt;/code&gt;: A collection of common network programs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iputils&lt;/code&gt;: Network monitoring tools, including &lt;code&gt;ping&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a text editor(s),&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nano&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vi&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;packages for accessing documentation in man and info pages,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;man-db&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man-pages&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;and more useful tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt;: the fast distributed version control system&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tmux&lt;/code&gt;: A terminal multiplexer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;less&lt;/code&gt;: A terminal based program for viewing text files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;usbutils&lt;/code&gt;: USB Device Utilities&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bash-completion&lt;/code&gt;: Programmable completion for the bash shell&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These tools will be useful later. So &lt;strong&gt;future me&lt;/strong&gt;, install these.&lt;/p&gt;
&lt;h2 id=&#34;generating-the-fstab&#34;&gt;Generating the fstab&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Check the resulting &lt;code&gt;/mnt/etc/fstab&lt;/code&gt; file, and edit it in case of errors.&lt;/p&gt;
&lt;h2 id=&#34;chroot&#34;&gt;Chroot&lt;/h2&gt;
&lt;p&gt;Now, change root into the newly installed system&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# arch-chroot /mnt /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;time-zone&#34;&gt;Time zone&lt;/h2&gt;
&lt;p&gt;A selection of timezones can be found under &lt;code&gt;/usr/share/zoneinfo/&lt;/code&gt;. Since I am in the Philippines, I will be using &lt;code&gt;/usr/share/zoneinfo/Asia/Manila&lt;/code&gt;. Select the appropriate timezone for your country:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# ln -sf /usr/share/zoneinfo/Asia/Manila /etc/localtime
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Run &lt;code&gt;hwclock&lt;/code&gt; to generate &lt;code&gt;/etc/adjtime&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# hwclock --systohc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This command assumes the hardware clock is set to UTC.&lt;/p&gt;
&lt;h2 id=&#34;localization&#34;&gt;Localization&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;locale&lt;/code&gt; defines which language the system uses, and other regional considerations such as currency denomination, numerology, and character sets. Possible values are listed in &lt;code&gt;/etc/locale.gen&lt;/code&gt;. Uncomment &lt;code&gt;en_US.UTF-8&lt;/code&gt;, as well as other needed localisations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Uncomment&lt;/strong&gt; &lt;code&gt;en_US.UTF-8 UTF-8&lt;/code&gt; and other needed locales in &lt;code&gt;/etc/locale.gen&lt;/code&gt;, &lt;strong&gt;save&lt;/strong&gt;, and generate them with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# locale-gen
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create the &lt;code&gt;locale.conf&lt;/code&gt; file, and set the LANG variable accordingly:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# locale &amp;gt; /etc/locale.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you set the keyboard layout earlier, make the changes persistent in &lt;code&gt;vconsole.conf&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# echo &amp;quot;KEYMAP=us&amp;quot; &amp;gt; /etc/vconsole.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Not using &lt;code&gt;us&lt;/code&gt; layout? Replace it, stoopid.&lt;/p&gt;
&lt;h2 id=&#34;network-configuration&#34;&gt;Network configuration&lt;/h2&gt;
&lt;p&gt;Create the hostname file. In this guide I&amp;rsquo;ll just use &lt;code&gt;MYHOSTNAME&lt;/code&gt; as hostname. Hostname is the host name of the host. Every 60 seconds, a minute passes in Africa.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# echo &amp;quot;MYHOSTNAME&amp;quot; &amp;gt; /etc/hostname
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Open &lt;code&gt;/etc/hosts&lt;/code&gt; to add matching entries to &lt;code&gt;hosts&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;127.0.0.1    localhost  
::1          localhost  
127.0.1.1    MYHOSTNAME.localdomain	  MYHOSTNAME
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If the system has a permanent IP address, it should be used instead of &lt;code&gt;127.0.1.1&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;initramfs&#34;&gt;Initramfs&lt;/h2&gt;
&lt;p&gt;Creating a new initramfs is usually not required, because mkinitcpio was run on installation of the kernel package with pacstrap. &lt;strong&gt;This is important&lt;/strong&gt; if you are setting up a system with encryption!&lt;/p&gt;
&lt;h3 id=&#34;unencrypted-filesystem-3&#34;&gt;Unencrypted filesystem&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;```
# mkinitcpio -p linux
```
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;encrypted-filesystem-with-lvmluks&#34;&gt;Encrypted filesystem with LVM/LUKS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt; with an editor:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In this guide, there are two ways to setting up initramfs, &lt;code&gt;udev&lt;/code&gt; (default) and &lt;code&gt;systemd&lt;/code&gt;. If you are planning to use &lt;code&gt;plymouth&lt;/code&gt;(splashcreen), it is advisable to use a &lt;code&gt;systemd&lt;/code&gt;-based initramfs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;udev-based initramfs (default).&lt;/p&gt;
&lt;p&gt;Find the &lt;code&gt;HOOKS&lt;/code&gt; array, then change it to something like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;HOOKS=(base udev autodetect keyboard modconf block encrypt lvm2 filesystems fsck)
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemd-based initramfs.&lt;/p&gt;
&lt;p&gt;Find the &lt;code&gt;HOOKS&lt;/code&gt; array, then change it to something like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;HOOKS=(base systemd autodetect keyboard sd-vconsole modconf block sd-encrypt sd-lvm2 filesystems fsck)
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Regenerate initramfs image:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkinitcpio -p linux
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;adding-repositories---multilib-and-aur&#34;&gt;Adding Repositories - &lt;code&gt;multilib&lt;/code&gt; and &lt;code&gt;AUR&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Enable multilib and AUR repositories in &lt;code&gt;/etc/pacman.conf&lt;/code&gt;. Open it with your editor of choice:&lt;/p&gt;
&lt;h3 id=&#34;adding-multilib-repository&#34;&gt;Adding multilib repository&lt;/h3&gt;
&lt;p&gt;Uncomment &lt;code&gt;multilib&lt;/code&gt; (remove # from the beginning of the lines). It should look like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[multilib]
Include = /etc/pacman.d/mirrorlist
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;adding-the-aur-repository&#34;&gt;Adding the AUR repository&lt;/h3&gt;
&lt;p&gt;Add the following lines at the end of your &lt;code&gt;/etc/pacman.conf&lt;/code&gt; to enable the AUR repo:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[archlinuxfr]
SigLevel = Never
Server = http://repo.archlinux.fr/$arch
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;pacman-easter-eggs&#34;&gt;&lt;code&gt;pacman&lt;/code&gt; easter eggs&lt;/h3&gt;
&lt;p&gt;You can enable the &amp;ldquo;easter-eggs&amp;rdquo; in &lt;code&gt;pacman&lt;/code&gt;, the package manager of archlinux.&lt;/p&gt;
&lt;p&gt;Open &lt;code&gt;/etc/pacman.conf&lt;/code&gt;, then find &lt;code&gt;# Misc options&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To add colors to &lt;code&gt;pacman&lt;/code&gt;, uncomment &lt;code&gt;Color&lt;/code&gt;. Then add &lt;code&gt;Pac-Man&lt;/code&gt; to &lt;code&gt;pacman&lt;/code&gt; by adding &lt;code&gt;ILoveCandy&lt;/code&gt; under the &lt;code&gt;Color&lt;/code&gt; string:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Color
ILoveCandy
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;update-repositories-and-packages&#34;&gt;Update repositories and packages&lt;/h3&gt;
&lt;p&gt;To check if you successfully added the repositories and enable the easter-eggs, run:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# pacman -Syu
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If updating returns an error, open the &lt;code&gt;pacman.conf&lt;/code&gt; again and check for human errors. Yes, you f&amp;rsquo;ed up big time.&lt;/p&gt;
&lt;h2 id=&#34;root-password&#34;&gt;Root password&lt;/h2&gt;
&lt;p&gt;Set the &lt;code&gt;root&lt;/code&gt; password:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# passwd
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;add-a-user-account&#34;&gt;Add a user account&lt;/h2&gt;
&lt;p&gt;Add a new user account. In this guide, I&amp;rsquo;ll just use &lt;code&gt;MYUSERNAME&lt;/code&gt; as the username of the new user aside from &lt;code&gt;root&lt;/code&gt; account. (My phrasing seems redundant, eh?) Of course, change the example username with your own:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# useradd -m -g users -G wheel,storage,power,video,audio,rfkill,input -s /bin/bash MYUSERNAME
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will create a new user and its &lt;code&gt;home&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;Set the password of user &lt;code&gt;MYUSERNAME&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# passwd MYUSERNAME
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;add-the-new-user-to-sudoers&#34;&gt;Add the new user to sudoers:&lt;/h2&gt;
&lt;p&gt;If you want a root privilege in the future by using the &lt;code&gt;sudo&lt;/code&gt; command, you should grant one yourself:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# EDITOR=vim visudo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Uncomment the line (Remove #):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# %wheel ALL=(ALL) ALL
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;install-the-boot-loader&#34;&gt;Install the boot loader&lt;/h2&gt;
&lt;p&gt;Yeah, this is where we install the bootloader. We will be using &lt;code&gt;systemd-boot&lt;/code&gt;, so no need for &lt;code&gt;grub2&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install bootloader:&lt;/p&gt;
&lt;p&gt;We will install it in &lt;code&gt;/boot&lt;/code&gt; mountpoint (&lt;code&gt;/dev/sda1&lt;/code&gt; partition).&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# bootctl --path=/boot install
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a boot entry &lt;code&gt;/boot/loader/entries/arch.conf&lt;/code&gt;, then add these lines:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;unencrypted-filesystem-4&#34;&gt;Unencrypted filesystem&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;```
title Arch Linux  
linux /vmlinuz-linux  
initrd  /initramfs-linux.img  
options root=/dev/sda3 rw
```

If your `/` is not in `/dev/sda3`, make sure to change it. 

Save and exit.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;encrypted-filesystem-2&#34;&gt;Encrypted filesystem&lt;/h3&gt;
&lt;p&gt;Remember the two-types of initramfs earlier? Each type needs a specific kernel parameters. So there&amp;rsquo;s also a two type of entries here. Remember that &lt;code&gt;volume&lt;/code&gt; is the volume group name and &lt;code&gt;/dev/mapper/volume-root&lt;/code&gt; is the path to &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;udev-based initramfs&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;title Arch Linux  
linux /vmlinuz-linux  
initrd  /initramfs-linux.img  
options cryptdevice=UUID=/DEV/SDA2/UUID/HERE:volume root=/dev/mapper/volume-root rw
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
place `/DEV/SDA2/UUID/HERE` with the UUID of your `LVM` partition. You can check it by running `blkid /dev/sda2`. Note that `cryptdevice` parameter  is unsupported by plymouth so it&#39;s advisable to use systemd-based initramfs if you are planning to use it.

p: If you are using `vim`, you can write the UUID easier by typing `:read ! blkid /dev/sda2` then hit enter. Then manipulate the output by using visual mode.

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemd-based initramfs&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;title Arch Linux
linux /vmlinuz-linux
initrd /intel-ucode.img
initrd /initramfs-linux.img
options rd.luks.name=/DEV/SDA2/UUID/HERE=volume root=/dev/mapper/volume-root rw
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
place `/DEV/SDA2/UUID/HERE` with the UUID of your `LVM` partition. You can check it by running `blkid /dev/sda2`.

p: If you are using `vim`, you can write the UUID easier by typing `:read ! blkid /dev/sda2` then hit enter. Then manipulate the output by using visual mode.

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;update-boot-loader-configuration&#34;&gt;Update boot loader configuration&lt;/h3&gt;
&lt;p&gt;Update bootloader configuration&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# vim /boot/loader/loader.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Delete all of its content, then replaced it by:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;default arch.conf
timeout 0
console-mode max
editor no
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;enable-internet-connection-for-the-next-boot&#34;&gt;Enable internet connection for the next boot&lt;/h2&gt;
&lt;p&gt;To enable the network daemons on your next reboot, you need to enable &lt;code&gt;dhcpcd.service&lt;/code&gt; for wired connection and &lt;code&gt;iwd.service&lt;/code&gt; for a wireless one.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# systemctl enable dhcpcd iwd
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;exit-chroot-and-reboot&#34;&gt;Exit chroot and reboot:&lt;/h2&gt;
&lt;p&gt;Exit the chroot environment by typing &lt;code&gt;exit&lt;/code&gt; or pressing &lt;kbd&gt;Ctrl + d&lt;/kbd&gt;. You can also unmount all mounted partition after this.&lt;/p&gt;
&lt;p&gt;Finally, &lt;code&gt;reboot&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;finale&#34;&gt;Finale&lt;/h2&gt;
&lt;p&gt;If your installation is a success, then &lt;em&gt;&lt;strong&gt;yay!!!&lt;/strong&gt;&lt;/em&gt; If not, you should start questioning your own existence. Are your parents proud of you?&lt;/p&gt;
&lt;h2 id=&#34;post-installationpostmdextrasextrasmd&#34;&gt;&lt;a href=&#34;./POST.md&#34;&gt;[POST INSTALLATION]&lt;/a&gt;		&lt;a href=&#34;./EXTRAS.md&#34;&gt;[EXTRAS]&lt;/a&gt;&lt;/h2&gt;
</description>
    </item>
    
  </channel>
</rss>